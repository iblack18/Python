#The sequence of triangle numbers is generated by adding the natural numbers.
#What is the value of the first triangle number to have over five hundred divisors?

##################
import math

def divisors(n): #Sees how many factors a number has
    number_of_factors = 0
    for i in range(1, int(math.ceil(math.sqrt(n)))): #The highest initial factor would be sqrt(#) rounded up
        if n % i == 0: #If it is a divisor, add two: (1) from the number and (1) from what it divides by
            number_of_factors +=2
        if i**2 == n: #If a perfect square, only add (1)
            number_of_factors -= 1
        else:
            continue
    return number_of_factors

x= 1
for y in range(2,1000000):
    x += y #We are only looking at 'triangle #s'
    if divisors(x) >= 500:
        print "The answer is: " + str(x)
        break
